//*********************************************************
// 文件名：DSTMessageServer.h
// 作  者：hek
// 日  期：2015-6-17
// 目  的：消息队列类 实现不同进程间消息通信
//*********************************************************
#pragma once
#include <stdio.h>
#include <stdlib.h>
#include <sys/msg.h>
#include <sys/types.h>
#include <unistd.h>
#include <string.h>

//用于创建唯一的Key
#define MSG_FILE "./MsgQueueFile"

//文件路径最大长度用 BUFSiZ 512

//客户端处理消息类型
#define MSG_CLIENT_TYPE 888

//客户端处理消息类型
#define MSG_SERVER_TYPE 999

// 消息结构
struct msg_form {
	long mtype;
	char mtext[BUFSIZ];
}; 

class CMsgQueue
{
public:
	explicit CMsgQueue(void);
	~CMsgQueue();

public:
	/************************************************************************/
	/*  函数说明：转换一个文件路径和一个文件子序列标识符为系统的IPC key
		参数：strMsgFilePath，消息队列IO文件路径， nProId：消息队列子序列ID（0~255）
		返回值：成功返回进程间通信标识，失败返回-1                          */
	/************************************************************************/
	static key_t FTok(const char* strMsgFilePath = MSG_FILE, int nProId = 'h');

	/************************************************************************/
	/*	函数说明：创建/打开消息队列 
		返回值：成功返回0，失败返回-1
		参数：key 进程间通信ID                                              */
	/************************************************************************/
	static int OpenMsgQue(int& nMsqid, key_t key);

	/************************************************************************/
	/*  函数说明：发送消息给消息队列
		返回值：成功返回0，失败返回-1
		参数：strMsqid 消息队列ID，msg 消息结构体                           */
	/************************************************************************/
	static int SendMsg(int nMsqid, const msg_form& msg);

	/************************************************************************/
	/*  函数说明：从消息队列中取消息
		返回值：成功返回0，失败返回-1
		参数：strMsqid 消息队列ID，msg 消息结构体							*/
	/************************************************************************/
	static int RecvMsg(int nMsqid, int nMsgType, msg_form& msg);

	/************************************************************************/
	/*  函数说明：发送消息给消息队列
		返回值：成功返回0，失败返回-1
		参数：strMsqid 消息队列ID						                    */
	/************************************************************************/
	static int CloseMsgQue(int nMsqid);
};
